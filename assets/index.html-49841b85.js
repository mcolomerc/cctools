import{_ as c,r as p,o as i,c as r,a as s,d as n,b as a,w as t,e as o}from"./app-0a598c04.js";const u={},d=s("h1",{id:"command-line",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#command-line","aria-hidden":"true"},"#"),n(" Command Line "),s("img",{src:"https://img.shields.io/github/v/release/mcolomerc/cctools",alt:"GitHub release"})],-1),m=s("p",null,[s("code",null,"cctools"),n(" is command Line tool for helping on Kafka operations or migrations between different Kafka platforms. Cluster migrations are not a trivial task, and this tool aims to help on this process.")],-1),k=s("p",null,"This CLI uses Kafka client and REST APIs to extract and export all the resources from the Source cluster in order to replicate them on the target cluster. It was tested with Confluent Platform and Confluent Cloud clusters.",-1),h=s("code",null,"export",-1),v={href:"https://www.confluent.io/lp/confluent-cloud",target:"_blank",rel:"noopener noreferrer"},g={href:"https://registry.terraform.io/providers/confluentinc/confluent/latest",target:"_blank",rel:"noopener noreferrer"},b={href:"https://docs.confluent.io/operator/current/overview.html",target:"_blank",rel:"noopener noreferrer"},f=s("p",null,[n("It provides a "),s("code",null,"copy"),n(" command to replicate cluster metadata, like topics or consumer groups, between clusters.")],-1),_=s("p",null,[n("It is possible to "),s("code",null,"import"),n(" resources to a cluster.")],-1),q=s("h2",{id:"installation",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#installation","aria-hidden":"true"},"#"),n(" Installation")],-1),y={href:"https://github.com/mcolomerc/cctools/releases",target:"_blank",rel:"noopener noreferrer"},x=s("p",null,[n("Last Release: "),s("img",{src:"https://img.shields.io/github/v/release/mcolomerc/cctools",alt:"GitHub release"})],-1),S=s("h2",{id:"example-usage",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#example-usage","aria-hidden":"true"},"#"),n(" Example Usage")],-1),C=o(`<p>Create a <code>config.yaml</code> file:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">touch</span> config.yaml
</code></pre></div><ul><li><p>Add the Source Cluster connection configuration, the <code>source</code> tag requires:</p></li><li><p>Cluster: <code>kafka</code> section contains the source Kafka cluster connection configuration.</p><ul><li><code>bootstrapServer</code>: Source Cluster bootstrap server.</li><li><code>clientProps</code>: Kafka client properties map.</li></ul></li></ul><p>Example for SASL_SSL (<em>config.yaml</em>):</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">source</span><span class="token punctuation">:</span> 
  <span class="token key atrule">kafka</span><span class="token punctuation">:</span>
    <span class="token key atrule">bootstrapServer</span><span class="token punctuation">:</span> &lt;bootstrap_server<span class="token punctuation">&gt;</span>
    <span class="token key atrule">clientProps</span><span class="token punctuation">:</span>  
      <span class="token punctuation">-</span> <span class="token key atrule">ssl.ca.location</span><span class="token punctuation">:</span> <span class="token string">&quot;&lt;path&gt;/cacerts.pem&quot;</span> 
      <span class="token punctuation">-</span> <span class="token key atrule">sasl.mechanisms</span><span class="token punctuation">:</span> PLAIN
      <span class="token punctuation">-</span> <span class="token key atrule">security.protocol</span><span class="token punctuation">:</span> SASL_SSL
      <span class="token punctuation">-</span> <span class="token key atrule">sasl.username</span><span class="token punctuation">:</span> &lt;admin_user<span class="token punctuation">&gt;</span>
      <span class="token punctuation">-</span> <span class="token key atrule">sasl.password</span><span class="token punctuation">:</span> &lt;admin_password<span class="token punctuation">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Add the output path for the JSON files, all the Topics metadata will be exported to <code>&lt;export.output.path&gt;/topics/json</code>, one file per Topic.</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">export</span><span class="token punctuation">:</span>
  <span class="token key atrule">output</span><span class="token punctuation">:</span> &lt;path<span class="token punctuation">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Filtering Topics. Exclude.</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">export</span><span class="token punctuation">:</span>
  <span class="token key atrule">output</span><span class="token punctuation">:</span> &lt;path<span class="token punctuation">&gt;</span>
  <span class="token key atrule">topics</span><span class="token punctuation">:</span>
    <span class="token key atrule">exclude</span><span class="token punctuation">:</span> &lt;topic_name_substring<span class="token punctuation">&gt;</span>  <span class="token comment">#_confluent</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Run the command:</li></ul><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>cctools <span class="token builtin class-name">export</span> topics <span class="token parameter variable">--config</span> config.yaml <span class="token parameter variable">--output</span> json
</code></pre></div><ul><li>Output folder. One JSON file per Topic exported.</li></ul><p>JSON Topic example:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
 <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;demo.topic&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;partitions&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
 <span class="token property">&quot;replicationFactor&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
 <span class="token property">&quot;minIsr&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;retentionTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;604800000&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;configs&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
   <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;confluent.stray.log.max.deletions.per.run&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;72&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
   <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;confluent.stray.log.delete.delay.ms&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;604800000&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  ...
 <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;acls&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
   <span class="token property">&quot;principal&quot;</span><span class="token operator">:</span> <span class="token string">&quot;User:test&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;host&quot;</span><span class="token operator">:</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;operation&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ALL&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;permission&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ALLOW&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;resourceType&quot;</span><span class="token operator">:</span> <span class="token string">&quot;TOPIC&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;resourceName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;demo.topic&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;patternType&quot;</span><span class="token operator">:</span> <span class="token string">&quot;LITERAL&quot;</span>
  <span class="token punctuation">}</span>
 <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h2>`,15),L=o(`<h2 id="commands" tabindex="-1"><a class="header-anchor" href="#commands" aria-hidden="true">#</a> Commands</h2><h3 id="copy" tabindex="-1"><a class="header-anchor" href="#copy" aria-hidden="true">#</a> Copy</h3><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>cctools copy
</code></pre></div><p>A command to replicate cluster metadata, like topics or consumer groups, between clusters.</p>`,4),w=o(`<h3 id="export" tabindex="-1"><a class="header-anchor" href="#export" aria-hidden="true">#</a> Export</h3><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>cctools <span class="token builtin class-name">export</span>
</code></pre></div><p>A command to export cluster metadata to different formats with a single command.</p>`,3),E=o(`<h3 id="import" tabindex="-1"><a class="header-anchor" href="#import" aria-hidden="true">#</a> Import</h3><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>cctools <span class="token function">import</span>
</code></pre></div><p>A command to import metadata.</p>`,3),T=o(`<h2 id="debug" tabindex="-1"><a class="header-anchor" href="#debug" aria-hidden="true">#</a> DEBUG</h2><p>Enable Debug mode:<code>LOG=DEBUG</code> for extra logging.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">LOG</span><span class="token operator">=</span>DEBUG cctools <span class="token operator">&lt;</span>command<span class="token operator">&gt;</span>
</code></pre></div>`,3);function I(A,O){const l=p("ExternalLinkIcon"),e=p("RouterLink");return i(),r("div",null,[d,m,k,s("p",null,[n("It allows to "),h,n(" resources into different formats, that could be used as input for different tools like "),s("a",v,[n("Confluent Cloud"),a(l)]),n(", "),s("a",g,[n("Terraform"),a(l)]),n(", "),s("a",b,[n("Confluent For Kubernetes"),a(l)]),n(" or any other tool.")]),f,_,q,s("p",null,[n("Go to "),s("a",y,[n("Releases"),a(l)]),n(" and Download your OS distribution.")]),x,S,s("p",null,[n("Export to JSON files all the Topics metadata from a Source Cluster. See "),a(e,{to:"/commands/export/topics.html"},{default:t(()=>[n("Topic Exporters")]),_:1}),n(" documentation for using other exporters.")]),C,s("p",null,[n("See documentation for all the "),a(e,{to:"/config/"},{default:t(()=>[n("Configuration")]),_:1})]),L,s("p",null,[n("Usage: "),a(e,{to:"/commands/copy.html"},{default:t(()=>[n("Copy")]),_:1})]),s("p",null,[n("See documentation for all the "),a(e,{to:"/commands/"},{default:t(()=>[n("Commands")]),_:1})]),w,s("p",null,[n("Usage: "),a(e,{to:"/commands/export.html"},{default:t(()=>[n("Export")]),_:1})]),s("p",null,[n("See documentation for all the "),a(e,{to:"/commands/"},{default:t(()=>[n("Commands")]),_:1})]),E,s("p",null,[n("Usage: "),a(e,{to:"/commands/import.html"},{default:t(()=>[n("Import")]),_:1})]),s("p",null,[n("See documentation for all the "),a(e,{to:"/commands/"},{default:t(()=>[n("Commands")]),_:1})]),T])}const G=c(u,[["render",I],["__file","index.html.vue"]]);export{G as default};
